{"version":3,"sources":["components/MovieComponent.js","components/MovieInfoComponent.js","App.js","index.js"],"names":["MovieContainer","styled","div","CoverImage","img","MovieName","span","InfoColumn","MovieInfo","MovieComponent","props","movie","Title","Year","imdbID","Type","Poster","onClick","onMovieSelect","window","scrollTo","top","behavior","src","alt","Container","Close","MovieInfoComponent","useState","movieInfo","setMovieInfo","selectedMovie","useEffect","Axios","get","API_KEY","then","response","data","imdbRating","Language","Rated","Released","Runtime","Genre","Director","Actors","Plot","AppName","Header","SearchBox","SearchIcon","MovieImage","SearchInput","input","MovieListContainer","Placeholder","App","searchQuery","updateSearchQuery","movieList","updateMovieList","timeoutId","updateTimeoutId","fetchData","searchString","a","Search","placeholder","value","onChange","e","clearTimeout","target","timeout","setTimeout","length","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7144907f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  width: 280px;\n  box-shadow: 0 3px 10px 0 #aaa;\n  cursor: pointer;\n`;\nconst CoverImage = styled.img`\n  object-fit: cover;\n  height: 362px;\n`;\nconst MovieName = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n  color: black;\n  margin: 15px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst InfoColumn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst MovieInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  white-space: nowrap;\n  overflow: hidden;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n`;\nconst MovieComponent = (props) => {\n  const { Title, Year, imdbID, Type, Poster } = props.movie;\n\n  return (\n    <MovieContainer\n      onClick={() => {\n        props.onMovieSelect(imdbID);\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      }}\n    >\n      <CoverImage src={Poster} alt={Title} />\n      <MovieName>{Title}</MovieName>\n      <InfoColumn>\n        <MovieInfo>Year : {Year}</MovieInfo>\n        <MovieInfo>Type : {Type}</MovieInfo>\n      </InfoColumn>\n    </MovieContainer>\n  );\n};\nexport default MovieComponent;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { API_KEY } from \"../App\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 20px 30px;\n  justify-content: center;\n  border-bottom: 1px solid lightgray;\n`;\nconst CoverImage = styled.img`\n  object-fit: cover;\n  height: 350px;\n`;\nconst InfoColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px;\n`;\nconst MovieName = styled.span`\n  font-size: 22px;\n  font-weight: 600;\n  color: black;\n  margin: 15px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n  & span {\n    opacity: 0.8;\n  }\n`;\nconst MovieInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  overflow: hidden;\n  margin: 4px 0;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n\n  & span {\n    opacity: 0.5;\n  }\n`;\nconst Close = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  color: black;\n  background: lightgray;\n  height: fit-content;\n  padding: 8px;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0.8;\n`;\nconst MovieInfoComponent = (props) => {\n  const [movieInfo, setMovieInfo] = useState();\n  const { selectedMovie } = props;\n\n  useEffect(() => {\n    Axios.get(\n      `https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,\n    ).then((response) => setMovieInfo(response.data));\n  }, [selectedMovie]);\n  return (\n    <Container>\n      {movieInfo ? (\n        <>\n          <CoverImage src={movieInfo?.Poster} alt={movieInfo?.Title} />\n          <InfoColumn>\n            <MovieName>\n              {movieInfo?.Type}: <span>{movieInfo?.Title}</span>\n            </MovieName>\n            <MovieInfo>\n              IMDB Rating: <span>{movieInfo?.imdbRating}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Year: <span>{movieInfo?.Year}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Language: <span>{movieInfo?.Language}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Rated: <span>{movieInfo?.Rated}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Released: <span>{movieInfo?.Released}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Runtime: <span>{movieInfo?.Runtime}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Genre: <span>{movieInfo?.Genre}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Director: <span>{movieInfo?.Director}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Actors: <span>{movieInfo?.Actors}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Plot: <span>{movieInfo?.Plot}</span>\n            </MovieInfo>\n          </InfoColumn>\n          <Close onClick={() => props.onMovieSelect()}>X</Close>\n        </>\n      ) : (\n        \"Loading...\"\n      )}\n    </Container>\n  );\n};\nexport default MovieInfoComponent;\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport styled from \"styled-components\";\nimport MovieComponent from \"./components/MovieComponent\";\nimport MovieInfoComponent from \"./components/MovieInfoComponent\";\n\nexport const API_KEY = \"a9118a3a\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst AppName = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst Header = styled.div`\n  background-color: black;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n  padding: 10px;\n  font-size: 25px;\n  font-weight: bold;\n  box-shadow: 0 3px 6px 0 #555;\n`;\nconst SearchBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 10px;\n  border-radius: 6px;\n  margin-left: 20px;\n  width: 50%;\n  background-color: white;\n`;\nconst SearchIcon = styled.img`\n  width: 32px;\n  height: 32px;\n`;\nconst MovieImage = styled.img`\n  width: 48px;\n  height: 48px;\n  margin: 15px;\n`;\nconst SearchInput = styled.input`\n  color: black;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  margin-left: 15px;\n`;\nconst MovieListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n  gap: 25px;\n  justify-content: space-evenly;;\n`;\nconst Placeholder = styled.img`\n  width: 120px;\n  height: 120px;\n  margin: 150px;\n  opacity: 50%;\n`;\n\nfunction App() {\n  const [searchQuery, updateSearchQuery] = useState(\"\");\n\n  const [movieList, updateMovieList] = useState([]);\n  const [selectedMovie, onMovieSelect] = useState();\n\n  const [timeoutId, updateTimeoutId] = useState();\n\n  const fetchData = async (searchString) => {\n    const response = await Axios.get(\n      `https://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`,\n    );\n    updateMovieList(response.data.Search);\n  };\n\n  const onTextChange = (e) => {\n    onMovieSelect(\"\")\n    clearTimeout(timeoutId);\n    updateSearchQuery(e.target.value);\n    const timeout = setTimeout(() => fetchData(e.target.value), 500);\n    updateTimeoutId(timeout);\n  };\n  return (\n    <Container>\n      <Header>\n        <AppName>\n          <MovieImage src=\"/react-movie-app/movie-icon.svg\" />\n          React Movie App\n        </AppName>\n        <SearchBox>\n          <SearchIcon src=\"/react-movie-app/search-icon.svg\" />\n          <SearchInput\n            placeholder=\"Search Movie\"\n            value={searchQuery}\n            onChange={onTextChange}\n          />\n        </SearchBox>\n      </Header>\n      {selectedMovie && <MovieInfoComponent selectedMovie={selectedMovie} onMovieSelect={onMovieSelect}/>}\n      <MovieListContainer>\n        {movieList?.length ? (\n          movieList.map((movie, index) => (\n            <MovieComponent\n              key={index}\n              movie={movie}\n              onMovieSelect={onMovieSelect}\n            />\n          ))\n        ) : (\n          <Placeholder src=\"/react-movie-app/movie-icon.svg\" />\n        )}\n      </MovieListContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}